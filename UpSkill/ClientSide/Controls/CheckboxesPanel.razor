<form>
    <div class="query-panel row">
        <section class="col-4">
            <h2 class="section-title">Categories</h2>
            @foreach (var categoryName in categoryNames.OrderBy(x => x))
            {
                var id = Guid.NewGuid();

                <div class="form-check">
                    <input id="@id" class="form-check-input" type="checkbox" 
                           @onchange="@(() => AddInSelectedCollection(categoryName))">
                    <label for="@id" class="form-check-label" >@categoryName</label>
                </div>
            }
        </section>
        <div class="vertical-separator col-1"></div>
        <section class="languages col-4">
            <h2 class="section-title">Languages</h2>
            @foreach (var language in languages)
            {
                var id = Guid.NewGuid();

                <div class="form-check">
                    <input id="@id" class="form-check-input" type="checkbox">
                    <label for="@id" class="form-check-label" >@language</label>
                </div>
            }
        </section>
        <section class="col-3">
            <img class="coach-catalog-img" src="images/coachesCatalog/CoachCatalogCheckboxImg.svg">
        </section>
    </div>
</form>

@code
{
    private ICollection<string> categoryNames = new List<string>();

    private ICollection<string> languages = new List<string>();

    private ICollection<string> selectedCategories = new List<string>();

    [Parameter]
    public EventCallback<ICollection<string>> CategoryNames { get; set; }

    protected override async Task OnInitializedAsync()
    {
        categoryNames = await Client.GetFromJsonAsync<ICollection<string>>("Category/GetAllNames");
        languages = await Client.GetFromJsonAsync<ICollection<string>>("Languages/GetAll");
    }

    protected void AddInSelectedCollection(string categoryName)
    {
        if (selectedCategories.Contains(categoryName))
        {
            selectedCategories.Remove(categoryName);
        }
        else
        {
            selectedCategories.Add(categoryName);
        }

        CategoryNames.InvokeAsync(selectedCategories.ToList());
    }
}
