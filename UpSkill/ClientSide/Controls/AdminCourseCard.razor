@using UpSkill.Infrastructure.Models.Course

<div class="col-sm-12 col-md-6 col-lg-4 p-4 p-md-3 p-lg-5">
    <article class="resource-card shadow">
        <div class="resource-top d-flex justify-content-center align-items-center">
            <img class="card-img-top resource-image" src="images/course-marketing.png" alt="@Course.Name">
            <p class="resource-title position-absolute mx-auto">@Course.Name</p>
        </div>
        <div class="card-body">
            <div class="row px-4 pb-1">
                <p class="resource col-sm-12 col-md-6 text-left pl-md-2 pr-md-0">
                    <span class="resource-name d-md-block">@Course.CategoryName</span>
                    <span class="resource-price d-md-block">@Course.FormattedPrice&euro; per person</span>
                </p>
                <p class="author col-sm-12 col-md-6 text-md-right text-sm-left pr-md-2 pl-md-0">
                    <span class="resource-author d-md-block">@Course.AuthorFullName</span>
                    <img class="company-logo img-responsive" src="images/logo-google.png" alt="@Course.AuthorFullName company logo">
                </p>
            </div>

            @if (Course.IsDeleted == false)
            {
                <div class="row">
                    <button @onclick="@(() => RemoveCourse(Course.Id))" class="btn action mx-auto">Remove</button>
                </div>
            }
        </div>
    </article>
</div>

@code {
    [Parameter]
    public AdminCourseListingServiceModel Course { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<AdminCourseListingServiceModel>> ChangeState { get; set; }

    private async Task RemoveCourse(int courseId)
    {
        var response = await this.Client
            .DeleteAsync($"/admin/course/delete/{courseId}");

        if(response.IsSuccessStatusCode)
        {
            var updatedCourses = await this.Client
            .GetFromJsonAsync<IEnumerable<AdminCourseListingServiceModel>>
            ("/admin/course/all");

            await ChangeState.InvokeAsync(updatedCourses);
        }
    }
}
