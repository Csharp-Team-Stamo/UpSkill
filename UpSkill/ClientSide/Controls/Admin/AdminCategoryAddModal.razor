@using UpSkill.Infrastructure.Models.Category

<div class="modal fade show" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="row modal-header-custom">
                <div class="add-company-text">Add Company</div>
                <div @onclick="ClosePopup" class="close header-btn" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </div>
                <div class="upload-csv-file-btn">
                    <div class="upload-csv-file-btn-text">
                        Upload CSV file
                    </div>
                </div>
            </div>
            <div>
                <EditForm Model="@categoryInput" OnValidSubmit="@Create">
                    <DataAnnotationsValidator />
                    <InputText @bind-Value="categoryInput.Name" placeholder="Category Name*"></InputText>
                    <ValidationMessage For="@(() => categoryInput.Name)"></ValidationMessage>
                    <div class="row">
                        <button class="cancel-btn">
                            <div @onclick="ClosePopup" class="cancel-btn-text">
                                Cancel
                            </div>
                        </button>
                        <button type="submit" class="save-btn">
                            <div class="save-btn-text">
                                Add Category
                            </div>
                        </button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private CategoryCreateInputModel categoryInput = new();

    [Parameter]
    public EventCallback<bool> SetShow { get; set; }

    [Parameter]
    public EventCallback<IEnumerable<AdminCategoryListingServiceModel>> GetUpdatedCategories { get; set; }

    private void ClosePopup()
    {
        SetShow.InvokeAsync(false);
    }

    private async Task Create()
    {
        var response = await Client
            .PostAsJsonAsync<CategoryCreateInputModel>("/admin/category/create", categoryInput);

        if(response.IsSuccessStatusCode)
        {
            var updatedCategories = await Client
            .GetFromJsonAsync<IEnumerable<AdminCategoryListingServiceModel>>
            ("/admin/category/all");

            await GetUpdatedCategories.InvokeAsync(updatedCategories);

            ClosePopup();
        }
    }
}
