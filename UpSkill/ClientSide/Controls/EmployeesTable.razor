<div class="mx-auto">
    <table class="table table-borderless shadow mt-4" style="line-height: 2.5em">
        <thead class="border-bottom-0">
            <tr class="" style="color: white; background-color: #296cfb">
                <th class="font-weight-bold text-left pl-4 cell-header-left">
                    Employees (@employeesModel.Count)
                </th>
                <th class="text-left font-weight-bold pr-4 cell-header-right">
                    Email
                </th>
                <th>
                    <div class="add-btn" @onclick="ShowPopup">+</div>
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var emp in employeesModel)
            {
                <tr class=" border-bottom-0 underline">
                    <td class="text-left pl-4 font-weight-bold cell-left" style="color: #16D696;">
                        @emp.FullName
                    </td>
                    <td class="text-left pr-4 cell-right">
                        @emp.Email
                    </td>
                </tr>
            }
            <tr class="text-center">
                <td colspan="2" style="color: #16D696">
                    View More
                </td>
            </tr>
        </tbody>
    </table>
</div>

@* Modal *@
@if (show)
{
    <AddEmployeeModal SetShow="SetShowValue" GetUpdatedEmployees="SetEmployeesCollection"></AddEmployeeModal>
}


@code
{
    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }

    private bool show = false;
    private ICollection<AddEmployeeFormModel> employeesModel = new List<AddEmployeeFormModel>();

    protected override async Task OnInitializedAsync()
    {
        employeesModel = await GetEmployees();
    }

    private void ShowPopup()
    {
        show = true;
    }

    private void SetShowValue(bool value)
    {
        show = value;
    }

    private void SetEmployeesCollection(ICollection<AddEmployeeFormModel> value)
    {
        employeesModel = value;
    }

    private async Task<ICollection<AddEmployeeFormModel>> GetEmployees()
    {
        return await Client.GetFromJsonAsync<ICollection<AddEmployeeFormModel>>($"/Employees/GetCollectionByCompanyId/{user.Company().Result}");
    }
}
