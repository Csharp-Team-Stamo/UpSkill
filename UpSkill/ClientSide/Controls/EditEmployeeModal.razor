@using System.IO
<div class="modal fade show container modal-custom" style="display:block; background-color: rgba(10,10,10,.8);"
     aria-modal="true">
    <div class="modal-dialog">
        <div class="modal-body">
            <div class="row modal-header-custom">
                <div class="modal-header-title">Personal Information</div>
                <div @onclick="ClosePopup" class="close header-btn" data-dismiss="modal" aria-label="Close">
                    <span style="font-size: 2rem" aria-hidden="true">&times;</span>
                </div>
            </div>
            <EditForm Model="@employeeModel">
                <div class="row">
                    <div class="col-4">
                        <div class="edit-foto-background">
                            @if (imageDataUri == null)
                            {
                                <img class="avatar-no-img" src="images/user-no-img-avatar.svg" />
                            }
                            else
                            {
                                <img src="@imageDataUri" />
                            }
                        </div>
                        <label class="edit-btn" for="edit">
                            <span class="edit-btn-text">Edit Photo</span>
                        </label>
                        <InputFile OnChange="LoadImg" id="edit" />
                    </div>

                    <div class="col-8">
                        <InputText @bind-Value="@employeeModel.FullName"></InputText>
                        <InputText @bind-Value="@employeeModel.Email"></InputText>
                        <InputTextArea @bind-Value="@employeeModel.Summary" rows="4" ></InputTextArea>
                    </div>
                </div>
                <div class="row mt-5">
                    <button class="cancel-btn">
                        <div @onclick="ClosePopup" class="cancel-btn-text">
                            Cancel
                        </div>
                    </button>
                    <button type="submit" class="save-btn">
                        <div class="save-btn-text">
                            Save
                        </div>
                    </button>
                </div>

            </EditForm>
        </div>
    </div>
</div>

@code
{
    long maxSizeFile = 1024 * 1024 * 15;

    string imageDataUri;

    private EditEmployeeModel employeeModel = new();

    [Parameter]
    public EventCallback<bool> SetShow { get; set; }



    private void ClosePopup()
    {
        SetShow.InvokeAsync(false);
    }

    private async Task LoadImg(InputFileChangeEventArgs e)
    {
        var imageFile = await e.File.RequestImageFileAsync("image/jpeg", maxHeight: 170, maxWith: 160);

        await using Stream fileStream = imageFile.OpenReadStream(maxSizeFile);
        await using MemoryStream memoryStream = new();

        await fileStream.CopyToAsync(memoryStream);

        imageDataUri = $"data:image/jpeg;base64,{Convert.ToBase64String(memoryStream.ToArray())}";
    }
}

