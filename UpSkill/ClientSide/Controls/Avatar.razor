@using UpSkill.Infrastructure.Models.ApplicationUser
@using Microsoft.EntityFrameworkCore.InMemory.ValueGeneration.Internal
@inject NavigationManager NavigationManager

<AuthorizeView>
    <div class="avatar-container" @onclick=@(() => RedirectToPage("/Dashboard"))>
        <i class="my-2 d-flex justify-content-around">
            <span class="justify-content-center align-self-center">
                @if (userModel.ImageToBase64 == null)
                {
                    @user.FullName().Result[0]
                }
                else
                {
                    <img src="@userModel.ImageToBase64" class="avatar" />
                }
            </span>
        </i>
    </div>
</AuthorizeView>


@code{

    private EditApplicationUserModel userModel = new();

    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }


    protected override async Task OnInitializedAsync()
    {
        userModel = await Client.GetFromJsonAsync<EditApplicationUserModel>($"/ApplicationUsers/GetById/{user.Id().Result}");
    }

    private void RedirectToPage(string pagePath)
    {
        NavigationManager.NavigateTo(pagePath);
    }

    public void Refresh(EditApplicationUserModel model)
    {
        
        userModel = model;
        StateHasChanged();
    }
}