@page "/admin/coach/edit/{id}"
@using UpSkill.Infrastructure.Models.Coach
@using UpSkill.Infrastructure.Models.Category

<h3>Admin Edit Coach</h3>

<EditForm Model="editInput" OnValidSubmit="Edit" class="card card-body bg-light mt-5">
    <DataAnnotationsValidator />

    <div class="form-group row">
        <label for="fullname" class="col-md-2 col-form-label">Name</label>
        <div class="col-md-10">
            <InputText id="fullname" class="form-control" @bind-Value="editInput.FullName" />
            <ValidationMessage For="@(() => editInput.FullName)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="company" class="col-md-2 col-form-label">Company</label>
        <div class="col-md-10">
            <InputText id="company" class="form-control" @bind-Value="editInput.Company" />
            <ValidationMessage For="@(() => editInput.Company)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="pricepersession" class="col-md-2 col-form-label">Price per Session</label>
        <div class="col-md-10">
            <InputNumber id="pricepersession" class="form-control" @bind-Value="editInput.PricePerSession" />
            <ValidationMessage For="@(() => editInput.PricePerSession)" />
        </div>
    </div>

    <div class="form-group row">
        <label for="CategoryId" class="col-md-2 col-form-label">Category</label>
        <div class="col-md-10">
            <InputSelect id="categoryId" class="form-control" @bind-Value="editInput.CategoryId">
                <option>@editInput.CategoryName</option>
                @foreach (var category in CategoriesInDb)
                {
                    <option value="@category.Id">@category.Name</option>
                }
            </InputSelect>
            <ValidationMessage For="@(() => editInput.CategoryId)" />
        </div>
    </div>
</EditForm>

@code {
    private CoachEditInputModel editInput = new();

    public IEnumerable<AdminCategoryListingServiceModel> CategoriesInDb { get; set; } =
        new List<AdminCategoryListingServiceModel>();

    [Parameter]
    public string Id { get; set; }

    [Inject]
    public HttpClient Client { get; set; }



    protected override async Task OnInitializedAsync()
    {
        this.editInput = await this.Client
            .GetFromJsonAsync<CoachEditInputModel>($"/admin/coach/edit/{Id}");

        this.CategoriesInDb = await this.Client
        .GetFromJsonAsync<IEnumerable<AdminCategoryListingServiceModel>>("/admin/category/all");
    }

    public async Task Edit()
    {
        var response = await this.Client.PutAsJsonAsync("/admin/coach/edit", editInput);
    }
}
