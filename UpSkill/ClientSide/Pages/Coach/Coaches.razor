@page "/Coaches"

@if (user.Role().Result == "Owner")
{
    <div class="text-right">
        <button @onclick="@(() => { NavigationManager.NavigateTo("/Coaches-catalog"); })" class="btn-add">
            <div class="btn-text">
                Manage
            </div>
        </button>
    </div>
}

@if (model == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="row">
        @foreach (var coach in model.Coaches)
        {
            <CoachCard Coach="coach"  CoachIdsCollection="@model.OwnerCoachCollectionIds" UpdatedOwnerCoachesListingCatalogModel="SetCoaches" />
        }
    </div>
}

@code
{

    private void GetCoaches(bool isSuccessfull)
    {
        Console.WriteLine();
    }

    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }

    private CoachesListingCatalogModel model;



    protected override async Task OnInitializedAsync()
    {
        var ownerId = user.OwnerId().Result;
        var userId = user.Id().Result;
        @if (user.Role().Result == GlobalConstants.BusinessOwnerRoleName)
        {
            model = await CoachesService.GetAllByOwnerIdAsync(ownerId);
        }
        else
        {
            model = await CoachesService.GetAllByEmployeeIdAsync(ownerId, userId);
        }
    }

    private void SetCoaches(CoachesListingCatalogModel updatedCoaches)
    {
        model = updatedCoaches;
    }
}