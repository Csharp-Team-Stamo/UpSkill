@page "/admin/course/all"

@using UpSkill.Infrastructure.Models.Course

<style>
    .pageMainGrid {
        display: grid;
        grid-template-columns: 1fr 1fr 2fr 1fr;
        row-gap: 1rem;
    }

        .pageMainGrid .gridCol {
            border-bottom: 2px solid #296cfb;
            text-align: center;
            vertical-align: central;
            margin-top: 1rem;
            margin-bottom: 1rem;
        }

            .pageMainGrid .gridCol a {
                margin: .2em;
            }
</style>

<h3 class="text-center mt-2 mb-2">Admin All Courses</h3>

<div class="pageMainGrid mt-5">
    <div class="gridCol">Id</div>
    <div class="gridCol">Name</div>
    <div class="gridCol">Description</div>
    <div class="gridCol">Action</div>
    @foreach (var course in allCourses)
    {
        <div class="gridCol">@course.Id</div>
        <div class="gridCol">
            <a href="@($"/admin/course/details/{course.Id}")">@course.Name</a>
            
        </div>
        <div class="gridCol">@course.Description</div>
        <div class="gridCol">
            <a href="/admin/course/edit/@course.Id">Edit</a>
            @if (course.IsDeleted)
            {
                <button @onclick="(() => SetDelete(course.Id))" class="btn btn-link">Undelete</button>
            }
            else
            {
                <button @onclick="(() => SetDelete(course.Id))" class="btn btn-link">Delete</button>
            }
        </div>
    }
</div>

@code {
    private IEnumerable<AdminCourseListingServiceModel> allCourses =
        new List<AdminCourseListingServiceModel>();

    [Inject]
    public HttpClient Client { get; set; }

    [Inject]
    public NavigationManager NavigationManager { get; set; }

    [Inject]
    public IJSRuntime JSRuntime { get; set; }

    protected override async Task OnInitializedAsync()
    {
        this.allCourses = await this.Client
        .GetFromJsonAsync<IEnumerable<AdminCourseListingServiceModel>>("admin/course/all");
    }

    public void SeeDetails(int id)
    {
        NavigationManager.NavigateTo($"/admin/course/details/{id}");
    }

    public async Task SetDelete(int id)
    {
        var response = await this.Client.DeleteAsync($"/admin/course/setdelete/{id}");
        await OnInitializedAsync();
    }
}