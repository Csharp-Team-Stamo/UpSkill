@page "/watch/course/{Id:int}"
@layout LogoAndAvatarOnlyLayout

@if (lectureDetails.Id <= 0)
{
    <div class="gridCol" id="lectureInfoHolder">
        <h3 id="mainHL">@courseDetails.CourseName</h3>
        <iframe width="660"
                height="315"
                src="@courseDetails.CourseVideoUrl"
                title="YouTube video player"
                frameborder="0"
                allow="accelerometer;
                       autoplay;
                       clipboard-write;
                       encrypted-media;
                       gyroscope; picture-in-picture" allowfullscreen>

        </iframe>

        <div class="my-5 courseInfoPar">
            <h6>Course Description</h6>
            <p>
                @courseDetails.CourseDescription
            </p>
        </div>

        <div id="instructor-info">
            <h6>Instructor</h6>
            <div class="avatar-container">
                <i class="avatar"></i>
                <div class="creator">
                    <div>
                        Created by
                    </div>
                    <div style="font-weight: bold;">
                        @courseDetails.AuthorFullName
                    </div>
                    <div class="company">
                        <img src="@courseDetails.AuthorCompanyLogoUrl"
                             width="60" height="30" />
                    </div>
                </div>
            </div>
            <p>
                Charles Du led the design of NASA’s first iPhone app
                (10+ million downloads, 2+ million hits per day, NASA’s Software of
                the Year Award) and co-founded the Airbnb for cars. He is an
                award-winning product manager, UX designer, lecturer, and international
                keynote speaker.
            </p>
        </div>
    </div>
}
else
{
    <LectureDetails CourseModel="courseDetails" Lecture="lectureDetails" />
}

    <div class="gridCol" id="lectureAsideMenu">
        <h5>Lectures</h5>
        @for (int i = 0; i < courseDetails.Lectures.Count(); i++)
        {
            int num = i + 1;
            var currentLecture = courseDetails.Lectures.ElementAt(i);
            var lectureId = currentLecture.Id;
            string title = currentLecture.Title;

            <p>
                @num.
                
                <a class="lecturePointer" @onclick="@(() => GetLectureDetails(lectureId))">
                    @title
                </a>
            </p>
            <hr />
        }

        <a id="viewMoreButton" href="#">View More</a>
    </div>

@code {
    private CourseWatchDetailsModel courseDetails = new();

    private LectureDetailsModel lectureDetails = new();

    [Parameter]
    public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        courseDetails = await Client
            .GetFromJsonAsync<CourseWatchDetailsModel>
            ($"/employees/getcoursebyid/{Id}");
    }

    private async Task GetLectureDetails(int lectureId)
    {
        lectureDetails = await Client
        .GetFromJsonAsync<LectureDetailsModel>
        ($"/courses/getlecturebyId/{courseDetails.CourseId}/{lectureId}");
    }
}
