@page "/Courses"

@if (user.Role().Result == "Owner")
{
    <div class="text-right">
        <button @onclick="@(() => { NavigationManager.NavigateTo("/Courses-catalog");})" class="btn-add">
            <div class="btn-text">
                Manage
            </div>
        </button>
    </div>
}

@if (model == null)
{
    <div class="spinner"></div>
}
else
{
    if (!model.Courses.Any())
    {
        if (user.Role().Result == GlobalConstants.EmployeeRoleName)
        {
            <div>Your employer has not added any courses yet.</div>
        }
        else if (user.Role().Result == GlobalConstants.BusinessOwnerRoleName)
        {
            <div>Please click the Manage button to add courses that can be enrolled by your employees.</div>
        }
    }
    else
    {
        <div class="row">
            @foreach (var course in model.Courses)
            {
                <CourseCard Course="course" OwnerId="@model.OwnerId" CoursesIdsCollection="@model.OwnerCourseCollectionIds" UpdatedOwnerCoursesListingCatalogModel="SetCourses" />
            }
        </div>
    }
}

@code{

    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }

    private CoursesListingCatalogModel model;

    protected override async Task OnInitializedAsync()
    {
        var ownerId = user.OwnerId().Result;

        model = await CoursesService.GetAllByOwnerIdAsync(ownerId);
    }

    private void SetCourses(CoursesListingCatalogModel updatedCourses)
    {
        model = updatedCourses;
    }
}
