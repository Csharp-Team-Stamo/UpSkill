@page "/Coaches-catalog"
@layout NoMenuLayout
@attribute [Microsoft.AspNetCore.Authorization.AllowAnonymous]


<CheckboxesPanel CategoryNames="FilterCoaches"></CheckboxesPanel>

@if (model == null)
{
    <div class="spinner"></div>
}
else
{
    <div class="row mt-5">
        @foreach (var coach in coaches)
        {
            <CoachCard Coach="coach" OwnerId="@model.OwnerId" CoachIdsCollection="@model.OwnerCoachCollectionIds" UpdatedCoachesListingCatalogModel="SetCoaches"></CoachCard>
        }
    </div>

}


@code {

    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }

    private CoachesListingCatalogModel model;
    private ICollection<CoachInListCatalogModel> coaches = new List<CoachInListCatalogModel>();


    protected override async Task OnInitializedAsync()
    {
        var userId = user.Id().Result;

        model = await CoachesService.GetAllAsync(userId);

        coaches = model.Coaches.ToList();
    }

    private void SetCoaches(CoachesListingCatalogModel updatedModel)
    {
        model = updatedModel;
    }


    private void FilterCoaches(ICollection<string> categoryNames)
    {
        if (categoryNames.Any())
        {
            coaches = model.Coaches.Where(x => categoryNames.ToList().Contains(x.CategoryName)).ToList();
        }
        else
        {
            coaches = model.Coaches;
        }
    }

}
