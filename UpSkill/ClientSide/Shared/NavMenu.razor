@using Microsoft.AspNetCore.Components.Authorization
@using UpSkill.ClientSide.Authentication.Services.Contracts
@using UpSkill.ClientSide.Controls

@inject IAuthenticationService AuthenticationService


<ul class="nav flex-column position-fixed border-light">
    <div class="pencil-container">
        <img @onclick="ShowPopup" class="pencil-img" src="images/iconmonstr-pencil-2.svg" />
    </div>
    <li class="nav-item px-3">
        <div class="d-inline-flex p-3 align-content-center">
            <Avatar></Avatar>
            <div class="ml-2 text-left">
                <div class=" mt-1 pb-1">
                    @user.FullName().Result
                </div>
                <div class="my-1">
                    @user.CompanyName().Result
                </div>
            </div>
        </div>
    </li>
    <li class="nav-item px-3">
        <NavLink class="nav-link" href="Dashboard">
            Dashboard
        </NavLink>
    </li>
    <li class="nav-item px-3">
        <NavLink class="nav-link" href="Courses">
            Courses
        </NavLink>
    </li>
    <li class="nav-item px-3">
        <NavLink class="nav-link" href="Coaches">
            Coaches
        </NavLink>
    </li>

    @if (user.Role().Result == "Owner")
    {
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Employees">
                Employees
            </NavLink>
        </li>

        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Invoice">
                Invoice
            </NavLink>
        </li>

    }
    else
    {
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Grades">
                Grades
            </NavLink>
        </li>
    }

    <AuthorizeView>
        <Authorized>
            <li class="nav-item px-3">
                <NavLink class="logout-button nav-link " @onclick="AuthenticationService.Logout">
                    <div>Log Out</div></NavLink>
            </li>
        </Authorized>
    </AuthorizeView>


</ul>


@code {


    [CascadingParameter]
    public Task<AuthenticationState> user { get; set; }

    [Parameter]
    public EventCallback<bool> show { get; set; }


    private void ShowPopup()
    {
        show.InvokeAsync(true);
    }

}